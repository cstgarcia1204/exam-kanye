{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/laboratoria-190/Escritorio/LaboratoriaW/niu/kanue-next/exam-kanye/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Content from '../components/Content';\nimport Header from '../components/Header';\nimport Card from '../components/Card';\nimport Quote from '../components/Quote';\nimport { getQuote } from '/lib/quotes-api';\nimport { OutputQuoteStyle } from 'terser';\nvar HELP_TEXT = {\n  fetch: 'With an external fetch'\n};\n\nvar Index = function Index(_ref) {\n  var quotes = _ref.quotes;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Kanye Quotes\"), quotes.map(function (_ref2) {\n    var id = _ref2.id,\n        quote = _ref2.quote;\n    return __jsx(Card, {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, __jsx(Quote, {\n      text: quote,\n      helpText: HELP_TEXT[id],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  })));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref3) {\n    var req, res, quotes;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref3.req, res = _ref3.res;\n            _context.t0 = _objectSpread;\n            _context.t1 = {};\n            _context.next = 5;\n            return getQuote();\n\n          case 5:\n            _context.t2 = _context.sent;\n            _context.t3 = {\n              id: 'fetch'\n            };\n            _context.t4 = (0, _context.t0)(_context.t1, _context.t2, _context.t3);\n            quotes = [_context.t4];\n            return _context.abrupt(\"return\", {\n              quotes: quotes\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport default Index;","map":{"version":3,"sources":["/home/laboratoria-190/Escritorio/LaboratoriaW/niu/kanue-next/exam-kanye/pages/index.js"],"names":["Layout","Content","Header","Card","Quote","getQuote","OutputQuoteStyle","HELP_TEXT","fetch","Index","quotes","map","id","quote","getInitialProps","req","res"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AAIA,IAAMC,SAAS,GAAE;AACbC,EAAAA,KAAK,EAAC;AADO,CAAjB;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAEC,MAAF,QAAEA,MAAF;AAAA,SACV,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,EAEIA,MAAM,CAACC,GAAP,CAAW;AAAA,QAAEC,EAAF,SAAEA,EAAF;AAAA,QAAKC,KAAL,SAAKA,KAAL;AAAA,WAER,MAAC,IAAD;AAAM,MAAA,GAAG,EAAED,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD;AAAO,MAAA,IAAI,EAAEC,KAAb;AAAoB,MAAA,QAAQ,EAAEN,SAAS,CAACK,EAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFQ;AAAA,GAAX,CAFJ,CADJ,CADU;AAAA,CAAd;;AAeAH,KAAK,CAACK,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,YAAAA,GAAR,SAAQA,GAAR,EAAaC,GAAb,SAAaA,GAAb;AAAA;AAAA;AAAA;AAAA,mBAELX,QAAQ,EAFH;;AAAA;AAAA;AAAA;AAEOO,cAAAA,EAAE,EAAE;AAFX;AAAA;AACdF,YAAAA,MADc;AAAA,6CAGT;AAACA,cAAAA,MAAM,EAANA;AAAD,aAHS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeD,KAAf","sourcesContent":["import Layout from '../components/Layout';\nimport Content from '../components/Content';\nimport Header from '../components/Header';\nimport Card from '../components/Card';\nimport Quote from '../components/Quote';\n\nimport {getQuote} from '/lib/quotes-api';\nimport { OutputQuoteStyle } from 'terser';\n\n\n\nconst HELP_TEXT ={\n    fetch:'With an external fetch'\n};\n\nconst Index = ({quotes})=>(\n    <Layout>\n        <Content>\n           <Header>Kanye Quotes</Header>\n           {quotes.map(({id,quote})=>\n           (\n               <Card key={id}>\n                   <Quote text={quote} helpText={HELP_TEXT[id]}></Quote>\n               </Card>\n           ))}\n        </Content>\n    </Layout>\n)\n\n\nIndex.getInitialProps = async ({req, res})=>{\n    const quotes= [\n        {...(await getQuote()),id: 'fetch'}];\n        return {quotes};\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}